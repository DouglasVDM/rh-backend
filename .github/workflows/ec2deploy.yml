name: Build and Push Docker Image to DockerHub and Deploy to AWS

on:
  push:
    branches: ["dev", "main"]
  pull_request:
    branches: ["dev", "main"]

env:
  # The registry to push the Docker image. docker.io for Docker Hub.
  REGISTRY: douglasvdmerwe
  # github.repository as <account>/<repo>
  IMAGE_NAME: rh-backend
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
  AWS_PRIVATE_KEY: ${{ secrets.AWS_PRIVATE_KEY }}
  KEYPAIR: github-actions.pem

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build the Docker image
        run: docker-compose build --no-cache --force-rm 

  test:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Test the Docker image
        run: docker-compose up -d 
        
  push_to_registry:
    needs: test
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ env.DOCKER_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: douglasvdmerwe/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: "{{defaultContext}}"
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  deploy:
    name: Deploy image to EC2 and run in container
    needs: push_to_registry

    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install Docker
        run: |  
          curl -fsSL https://get.docker.com | sudo sh -
            
      - name: Set up SSH key
        run: |
          echo "${{ env.AWS_PRIVATE_KEY }}" > ${{ env.KEYPAIR }}
          chmod 600 ${{ env.KEYPAIR }}

      - name: Pull Docker image
        run: |
          ssh -i "github-actions.pem" ubuntu@ec2-54-165-177-227.compute-1.amazonaws.com '
          sudo docker pull ${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:latest
          '

      - name: Stop running container (if exists)
        run: |
          ssh -i "github-actions.pem" ubuntu@ec2-54-165-177-227.compute-1.amazonaws.com '
          sudo docker stop ${{ env.IMAGE_NAME }} || true
          '
          ssh -i "github-actions.pem" ubuntu@ec2-54-165-177-227.compute-1.amazonaws.com '
          sudo docker rm ${{ env.IMAGE_NAME }} || true
          '

      - name: Run new container
        run: |
          ssh -i "github-actions.pem" ubuntu@ec2-54-165-177-227.compute-1.amazonaws.com '
          sudo docker run -d --name ${{ env.IMAGE_NAME }} -p 80:5000 ${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:latest
          '